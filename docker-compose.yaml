services:
  db:
    image: "postgres:16"
    environment:
      POSTGRES_USER: user
      POSTGRES_PASSWORD: pass
      POSTGRES_DB: grafana
    ports:
      - "6543:5432"
    volumes:
      - postgres:/var/lib/postgresql/data/

  grafana:
    image: "grafana/grafana:latest"
    environment:
      GF_DATABASE_TYPE: postgres
      GF_DATABASE_HOST: db:5432
      GF_DATABASE_NAME: grafana
      GF_DATABASE_USER: user
      GF_DATABASE_PASSWORD: pass
      GF_DATABASE_SSL_MODE: disable
    depends_on:
      - db
      - timescaledb
    ports:
      - 3000:3000
    volumes:
      - grafana:/var/lib/grafana

  timescaledb:
    image: timescale/timescaledb-ha:pg14-latest
    environment:
      POSTGRES_DB: metrics
      POSTGRES_PASSWORD: pass
      POSTGRES_USER: user
    ports:
      - 5433:5432
    volumes:
      - timescaledb:/home/postgres/pgdata/data

  metrics-prod:
    # image name, both locally and public
    image: metrics
    build:
      dockerfile: docker/Dockerfile
      # the prod stage in the Dockerfile
      target: metrics-prod
      # should speed up the build in CI, where we have a cold cache
      cache_from:  # should speed up the build in CI, where we have a cold cache
        - ghcr.io/opensafely-core/base-docker
        - ghcr.io/ebmdatalab/metrics
      args:
        # this makes the image work for later cache_from: usage
        - BUILDKIT_INLINE_CACHE=1
        # env vars should be supplied by just
        - BUILD_DATE
        - GITREF
    # use dockers builitin PID daemon
    init: true
    environment:
      - GITHUB_TOKEN=dummy
      - SLACK_SIGNING_SECRET=dummy
      - SLACK_TECH_SUPPORT_CHANNEL_ID=dummy
      - SLACK_TOKEN=dummy
      - TIMESCALEDB_URL=dummy

  # main development service
  metrics-dev:
    extends:
        service: metrics-prod
    image: metrics-dev
    container_name: metrics-dev
    # running as a specific uid/gid allows files written to mounted volumes by
    # the docker container's default user to match the host user's uid/gid, for
    # convienience.
    user: ${DEV_USERID:-1000}:${DEV_GROUPID:-1000}
    build:
      # the dev stage in the Dockerfile
      target: metrics-dev
      # pass the uid/gid as build arg
      args:
        - DEV_USERID=${DEV_USERID:-1000}
        - DEV_GROUPID=${DEV_GROUPID:-1000}
    volumes:
      # mount our current code
      - .:/app
    env_file:
      - .env

volumes:
  postgres:
  grafana:
  timescaledb:
